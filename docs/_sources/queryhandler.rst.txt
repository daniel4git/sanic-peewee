异步请求操作
=========================

表格中数据的增删改查操作都是异步的,需要使用await关键字.

其中新增和获取单独数据的操作需使用model.aio中的方法,而更新和删除则需要使用db.aio中的方法


新增数据
--------------------------


新增数据可以使用 ::

    await Model.aio.create(key=val,...)


获取数据
---------------------------

获取数据分为两种,一种是使用model.aio.get方法,它只会获取一个数据,
而使用db.aio.select或者db.aio.excrute方法可以获得查找的所有数据.

查找数据: ::

    await Model.aio.get(key=val)
    await db.aio.select(db.SelectQuery(Model))
    await db.aio.execute(Model.select())



修改数据
----------------------------

修改数据有两种种方式

+ 异步执行query: ::

    await db.aio.update(db.UpdateQuery(Model, {Model.key:new}).where(Model.key == old))
    await db.aio.execute(Model.update(key=new).where(Model.key == old))

+ 操作上下文中get到的数据: ::

    obj = await Model.aio.get(key=old)
    obj.text = new
    await self.db.aio.update(obj)


删除数据
-------------------------------------


删除也和修改类似,分为同样的两类

+ 异步执行query: ::

    await db.aio.delete(db.DeleteQuery(Model).where(Model.key == val))
    await db.aio.execute(Model.delete().where(Model.key == val))

+ 操作上下文中get到的数据: ::

    obj = await MysqlTestModelAlpha.aio.get(text=text)
    await self.db.aio.delete(obj)
